import vlc
import os
import time
import subprocess
import threading

# Semaphore to prevent `left.py` and `right.py` from running simultaneously
from threading import Semaphore

semaphore = Semaphore(1)

def play_intro_video():
    """Play the intro video using VLC."""
    video_url = "http://your-cdn.com/intro.mp4"
    player = vlc.MediaPlayer(video_url)
    player.set_fullscreen(True)
    player.play()

    while True:
        state = player.get_state()
        if state == vlc.State.Ended:
            break
        time.sleep(1)

    player.stop()
    player.release()

def launch_chromium():
    """Launch Chromium in fullscreen mode."""
    url = "http://robotum.vercel.app"
    os.system(f"chromium-browser --noerrdialogs --disable-infobars --kiosk {url}")

def run_left():
    """Run left.py while ensuring no conflicts with right.py."""
    with semaphore:  # Acquire the semaphore
        print("Running left.py...")
        subprocess.run(["python3", "left.py"])
        print("Finished running left.py.")

def run_right():
    """Run right.py while ensuring no conflicts with left.py."""
    with semaphore:  # Acquire the semaphore
        print("Running right.py...")
        subprocess.run(["python3", "right.py"])
        print("Finished running right.py.")

def run_left_and_right_in_sequence():
    """Run left.py and right.py alternately in sequence."""
    while True:
        run_left()
        time.sleep(2)  # Delay between runs
        run_right()
        time.sleep(2)  # Delay between runs

if __name__ == "__main__":
    # Thread for running left.py and right.py alternately
    threading.Thread(target=run_left_and_right_in_sequence, daemon=True).start()

    # Play the intro video
    play_intro_video()

    # Launch Chromium after the video
    launch_chromium()
