import vlc
import os
import time
import subprocess
import threading

def play_intro_video():
    """Play the intro video using VLC."""
    video_url = "http://your-cdn.com/intro.mp4"
    player = vlc.MediaPlayer(video_url)
    player.set_fullscreen(True)
    player.play()

    while True:
        state = player.get_state()
        if state == vlc.State.Ended:
            break
        time.sleep(1)

    player.stop()
    player.release()

def launch_chromium():
    """Launch Chromium in fullscreen mode."""
    url = "http://robotum.vercel.app"
    os.system(f"chromium-browser --noerrdialogs --disable-infobars --kiosk {url}")

def run_left_and_right_alternately():
    """Run left.py and right.py alternately with a delay in between."""
    while True:
        # Run left.py
        print("Running left.py...")
        subprocess.run(["python3", "left.py"])
        print("Finished running left.py.")
        time.sleep(2)  # Sleep before switching to right.py

        # Run right.py
        print("Running right.py...")
        subprocess.run(["python3", "right.py"])
        print("Finished running right.py.")
        time.sleep(2)  # Sleep before switching back to left.py

def run_listening():
    """Run listening.py continuously in a subprocess."""
    print("Starting listening.py...")
    subprocess.run(["python3", "listening.py"])
    print("listening.py has stopped.")

if __name__ == "__main__":
    # Thread for running left.py and right.py alternately
    threading.Thread(target=run_left_and_right_alternately, daemon=True).start()

    # Thread to keep listening.py running in the background
    threading.Thread(target=run_listening, daemon=True).start()

    # Play the intro video
    play_intro_video()

    # Launch Chromium after the video
    launch_chromium()
